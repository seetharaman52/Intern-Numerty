Dependencies:
sudo apt install python3.10-venv
sudo apt-get install python3-dev
sudo apt-get install libmysqlclient-dev
python3 -m venv venv
source venv/bin/activate
pip install django
pip install django-cors-headers
pip install djangorestframework
pip install dj-database-url
pip install mysqlclient
pip install pymysql
django-admin --version
django-admin startproject myapp
python manage.py runserver
python manage.py startapp HarvestHub

================================================================================================

In models.py:

from django.db import models

# Create your models here.

class Myapp(models.Model):
    username = models.CharField(max_length=50)
    phn_number = models.BigIntegerField(unique=True)
    email = models.EmailField(unique=True)
    password = models.CharField(max_length=50)
    
=================================================================================================

In views.py:

from django.shortcuts import render

# Create your views here.

from django.views.decorators.csrf import csrf_exempt
from rest_framework.parsers import JSONParser
from django.http.response import JsonResponse
from HarvestHub.serializers import MyappSerializer
from HarvestHub.models import Myapp

@csrf_exempt
def harvest_hub_api(request,id=0):
    if request.method=='GET':
        app = Myapp.objects.all()
        app_serializer=MyappSerializer(app,many=True)
        return JsonResponse(app_serializer.data,safe=False)
    
    elif request.method=='POST':
        app_data=JSONParser().parse(request)
        print(app_data)
        app_serializer=MyappSerializer(data=app_data)
        print(app_serializer.is_valid())
        if app_serializer.is_valid():
            app_serializer.save()
            return JsonResponse("Added Successfully",safe=False)
        else:
            print(app_serializer.errors)
            return JsonResponse("Failed to Add", safe=False)
        return JsonResponse("Failed to Add",safe=False)
    
    elif request.method=='PUT':
        app_data=JSONParser().parse(request)
        app=Myapp.objects.get(id=id)
        app_serializer=MyappSerializer(app,data=app_data)
        if app_serializer.is_valid():
            app_serializer.save()
            return JsonResponse("Updated Successfully",safe=False)
        return JsonResponse("Failed to Update")
    
    elif request.method=='DELETE':
        app=Myapp.objects.get(id=id)
        app.delete()
        return JsonResponse("Deleted Successfully",safe=False)

=================================================================================================

In serializers.py:

from rest_framework import serializers
from HarvestHub.models import Myapp

class MyappSerializer(serializers.ModelSerializer):
    class Meta:
        model = Myapp
        fields = '__all__'

=================================================================================================

In settings.py:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'myapp',
        'USER': 'root',
        'PASSWORD': 'myPASSWORD',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Add to MIDDLEWARE:
'corsheaders.middleware.CorsMiddleware',

# Add to INSTALLED_APPS:
'HarvestHub.apps.HarvesthubConfig',
'corsheaders',
'rest_framework',

# Add at the end of the file:
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_ALL_HEADERS = True

=================================================================================================

Add in url.py:

from django.contrib import admin
from django.urls import path, re_path
from HarvestHub import views

urlpatterns = [
    re_path(r'^app$',views.harvest_hub_api),
    re_path(r'^app/([0-9]+)$',views.harvest_hub_api),
    path('admin/', admin.site.urls),
]
